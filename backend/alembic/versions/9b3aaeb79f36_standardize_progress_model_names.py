"""standardize_progress_model_names

Revision ID: 9b3aaeb79f36
Revises: 
Create Date: 2025-03-28 00:43:36.698546

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9b3aaeb79f36'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index('ix_categories_name', 'categories', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_courses_category_id_categories'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_courses'))
    )
    op.create_index('ix_courses_category', 'courses', ['category_id'], unique=False)
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_index('ix_courses_title', 'courses', ['title'], unique=False)
    op.create_table('learning_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_learning_goals_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_learning_goals'))
    )
    op.create_index(op.f('ix_learning_goals_id'), 'learning_goals', ['id'], unique=False)
    op.create_index('ix_learning_goals_status', 'learning_goals', ['status'], unique=False)
    op.create_index('ix_learning_goals_user', 'learning_goals', ['user_id'], unique=False)
    op.create_table('learning_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('content_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_learning_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_learning_sessions'))
    )
    op.create_index(op.f('ix_learning_sessions_id'), 'learning_sessions', ['id'], unique=False)
    op.create_index('ix_learning_sessions_status', 'learning_sessions', ['status'], unique=False)
    op.create_index('ix_learning_sessions_user', 'learning_sessions', ['user_id'], unique=False)
    op.create_table('llm_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('content_id', sa.Integer(), nullable=True),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('feedback_rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_llm_interactions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_llm_interactions'))
    )
    op.create_index('ix_llm_interactions_content', 'llm_interactions', ['content_type', 'content_id'], unique=False)
    op.create_index(op.f('ix_llm_interactions_id'), 'llm_interactions', ['id'], unique=False)
    op.create_index('ix_llm_interactions_user', 'llm_interactions', ['user_id'], unique=False)
    op.create_table('course_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('progress_percentage', sa.Float(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_course_progress_course_id_courses'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_course_progress_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_progress'))
    )
    op.create_index(op.f('ix_course_progress_id'), 'course_progress', ['id'], unique=False)
    op.create_index('ix_course_progress_user_course', 'course_progress', ['user_id', 'course_id'], unique=True)
    op.create_table('goal_courses',
    sa.Column('goal_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_goal_courses_course_id_courses'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['goal_id'], ['learning_goals.id'], name=op.f('fk_goal_courses_goal_id_learning_goals'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('goal_id', 'course_id', name=op.f('pk_goal_courses'))
    )
    op.create_index('ix_goal_courses_course', 'goal_courses', ['course_id'], unique=False)
    op.create_index('ix_goal_courses_goal', 'goal_courses', ['goal_id'], unique=False)
    op.create_table('units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_units_course_id_courses'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_units'))
    )
    op.create_index('ix_units_course_order', 'units', ['course_id', 'order'], unique=True)
    op.create_index(op.f('ix_units_id'), 'units', ['id'], unique=False)
    op.create_table('quizzes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], name=op.f('fk_quizzes_unit_id_units'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quizzes'))
    )
    op.create_index(op.f('ix_quizzes_id'), 'quizzes', ['id'], unique=False)
    op.create_index('ix_quizzes_title', 'quizzes', ['title'], unique=False)
    op.create_index('ix_quizzes_unit', 'quizzes', ['unit_id'], unique=False)
    op.create_table('videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], name=op.f('fk_videos_unit_id_units'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_videos'))
    )
    op.create_index(op.f('ix_videos_id'), 'videos', ['id'], unique=False)
    op.create_index('ix_videos_title', 'videos', ['title'], unique=False)
    op.create_index('ix_videos_unit', 'videos', ['unit_id'], unique=False)
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('video_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notes_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name=op.f('fk_notes_video_id_videos'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notes'))
    )
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.create_index('ix_notes_user_video', 'notes', ['user_id', 'video_id'], unique=False)
    op.create_table('quiz_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name=op.f('fk_quiz_attempts_quiz_id_quizzes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_quiz_attempts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quiz_attempts'))
    )
    op.create_index(op.f('ix_quiz_attempts_id'), 'quiz_attempts', ['id'], unique=False)
    op.create_index('ix_quiz_attempts_user_quiz', 'quiz_attempts', ['user_id', 'quiz_id'], unique=False)
    op.create_table('quiz_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name=op.f('fk_quiz_questions_quiz_id_quizzes'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quiz_questions'))
    )
    op.create_index(op.f('ix_quiz_questions_id'), 'quiz_questions', ['id'], unique=False)
    op.create_index('ix_quiz_questions_quiz', 'quiz_questions', ['quiz_id'], unique=False)
    op.create_table('video_processing_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('video_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name=op.f('fk_video_processing_jobs_video_id_videos'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_video_processing_jobs'))
    )
    op.create_index(op.f('ix_video_processing_jobs_id'), 'video_processing_jobs', ['id'], unique=False)
    op.create_index('ix_video_processing_jobs_status', 'video_processing_jobs', ['status'], unique=False)
    op.create_table('video_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('video_id', sa.Integer(), nullable=True),
    sa.Column('watched_duration', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('last_watched', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_video_progress_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name=op.f('fk_video_progress_video_id_videos'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_video_progress'))
    )
    op.create_index(op.f('ix_video_progress_id'), 'video_progress', ['id'], unique=False)
    op.create_index('ix_video_progress_user_video', 'video_progress', ['user_id', 'video_id'], unique=True)
    op.create_table('quiz_question_choices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('choice_text', sa.String(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['quiz_questions.id'], name=op.f('fk_quiz_question_choices_question_id_quiz_questions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quiz_question_choices'))
    )
    op.create_index(op.f('ix_quiz_question_choices_id'), 'quiz_question_choices', ['id'], unique=False)
    op.create_index('ix_quiz_question_choices_question', 'quiz_question_choices', ['question_id'], unique=False)
    op.create_table('quiz_question_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attempt_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('user_answer', sa.String(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['quiz_attempts.id'], name=op.f('fk_quiz_question_responses_attempt_id_quiz_attempts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['quiz_questions.id'], name=op.f('fk_quiz_question_responses_question_id_quiz_questions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quiz_question_responses'))
    )
    op.create_index('ix_quiz_question_responses_attempt', 'quiz_question_responses', ['attempt_id'], unique=False)
    op.create_index(op.f('ix_quiz_question_responses_id'), 'quiz_question_responses', ['id'], unique=False)
    op.create_index('ix_quiz_question_responses_question', 'quiz_question_responses', ['question_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_quiz_question_responses_question', table_name='quiz_question_responses')
    op.drop_index(op.f('ix_quiz_question_responses_id'), table_name='quiz_question_responses')
    op.drop_index('ix_quiz_question_responses_attempt', table_name='quiz_question_responses')
    op.drop_table('quiz_question_responses')
    op.drop_index('ix_quiz_question_choices_question', table_name='quiz_question_choices')
    op.drop_index(op.f('ix_quiz_question_choices_id'), table_name='quiz_question_choices')
    op.drop_table('quiz_question_choices')
    op.drop_index('ix_video_progress_user_video', table_name='video_progress')
    op.drop_index(op.f('ix_video_progress_id'), table_name='video_progress')
    op.drop_table('video_progress')
    op.drop_index('ix_video_processing_jobs_status', table_name='video_processing_jobs')
    op.drop_index(op.f('ix_video_processing_jobs_id'), table_name='video_processing_jobs')
    op.drop_table('video_processing_jobs')
    op.drop_index('ix_quiz_questions_quiz', table_name='quiz_questions')
    op.drop_index(op.f('ix_quiz_questions_id'), table_name='quiz_questions')
    op.drop_table('quiz_questions')
    op.drop_index('ix_quiz_attempts_user_quiz', table_name='quiz_attempts')
    op.drop_index(op.f('ix_quiz_attempts_id'), table_name='quiz_attempts')
    op.drop_table('quiz_attempts')
    op.drop_index('ix_notes_user_video', table_name='notes')
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_table('notes')
    op.drop_index('ix_videos_unit', table_name='videos')
    op.drop_index('ix_videos_title', table_name='videos')
    op.drop_index(op.f('ix_videos_id'), table_name='videos')
    op.drop_table('videos')
    op.drop_index('ix_quizzes_unit', table_name='quizzes')
    op.drop_index('ix_quizzes_title', table_name='quizzes')
    op.drop_index(op.f('ix_quizzes_id'), table_name='quizzes')
    op.drop_table('quizzes')
    op.drop_index(op.f('ix_units_id'), table_name='units')
    op.drop_index('ix_units_course_order', table_name='units')
    op.drop_table('units')
    op.drop_index('ix_goal_courses_goal', table_name='goal_courses')
    op.drop_index('ix_goal_courses_course', table_name='goal_courses')
    op.drop_table('goal_courses')
    op.drop_index('ix_course_progress_user_course', table_name='course_progress')
    op.drop_index(op.f('ix_course_progress_id'), table_name='course_progress')
    op.drop_table('course_progress')
    op.drop_index('ix_llm_interactions_user', table_name='llm_interactions')
    op.drop_index(op.f('ix_llm_interactions_id'), table_name='llm_interactions')
    op.drop_index('ix_llm_interactions_content', table_name='llm_interactions')
    op.drop_table('llm_interactions')
    op.drop_index('ix_learning_sessions_user', table_name='learning_sessions')
    op.drop_index('ix_learning_sessions_status', table_name='learning_sessions')
    op.drop_index(op.f('ix_learning_sessions_id'), table_name='learning_sessions')
    op.drop_table('learning_sessions')
    op.drop_index('ix_learning_goals_user', table_name='learning_goals')
    op.drop_index('ix_learning_goals_status', table_name='learning_goals')
    op.drop_index(op.f('ix_learning_goals_id'), table_name='learning_goals')
    op.drop_table('learning_goals')
    op.drop_index('ix_courses_title', table_name='courses')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_index('ix_courses_category', table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index('ix_categories_name', table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ### 